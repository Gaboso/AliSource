apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

ext {
    publishedGroupId = 'com.github.gaboso'
    libraryName = 'AliSource'
    artifactIdExt = 'alisource'

    libraryDescription = 'Android library with basic codes to make application development simpler'

    siteUrl = 'https://github.com/Gaboso/AliSource'
    gitUrl = 'https://github.com/Gaboso/AliSource.git'

    libraryVersion = '3.0.0'

    developerId = 'gaboso'
    developerName = 'Gaboso'
    developerEmail = 'gabrielsantiago2@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
}

android {
    namespace = 'br.com.alisource'
    compileSdkVersion = 35
    buildToolsVersion = '35.0.1'

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion  35
        versionCode 17
        versionName = libraryVersion
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.browser:browser:1.8.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'

    androidTestImplementation('androidx.test.espresso:espresso-core:3.6.1') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    androidTestImplementation 'junit:junit:4.13.2'
}

// Generate sourcesJar
tasks.register('sourcesJar', Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.srcDirs
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = publishedGroupId
                artifactId = artifactIdExt
                version = libraryVersion

                // Main artifact AAR
                def aarOutput = file("$buildDir/outputs/aar/${project.name}-release.aar")
                artifact(aarOutput) {
                    builtBy tasks.named("assembleRelease")
                }

                artifact sourcesJar

                pom {
                    name.set(libraryName)
                    description.set(libraryDescription)
                    url.set(siteUrl)

                    licenses {
                        license {
                            name.set(licenseName)
                            url.set(licenseUrl)
                        }
                    }

                    developers {
                        developer {
                            id.set(developerId)
                            name.set(developerName)
                            email.set(developerEmail)
                        }
                    }

                    scm {
                        connection.set(gitUrl)
                        developerConnection.set(gitUrl)
                        url.set(siteUrl)
                    }
                }
            }
        }

        repositories {
            mavenLocal()
        }
    }
}
